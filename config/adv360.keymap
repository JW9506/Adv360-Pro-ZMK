
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/outputs.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    pht: positional_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "POSITIONAL_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "hold-preferred";
        tapping-term-ms = <180>;
        bindings = <&kp>, <&kp>;
    }; /* quick-tap-ms = <100>; */
  };

  macros {
    pause_vid: pause_vid {
        label = "pause_vid";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <150>;
        bindings
            = <&macro_tap_time 10>
            , <&kp LA(TAB)>
            , <&kp SPACE>
            , <&macro_tap_time 10>
            , <&kp LA(TAB)>
            ;
    };
  };

  keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp TAB  &kp LA(SPACE) &kp LC(PG_UP) &kp LA(TAB) &kp LC(PG_DN)     &kp LA(LSHFT)      &none                                                                                                   &none         &none      &none    &kp LC(TAB)  &none &kp RA(SPACE) &kp LC(LGUI)
 &kp LC(LSHFT) &kp Q     &kp W        &kp F      &kp P             &kp B              &kp F12                                                                                                 &kp F11       &kp J      &kp L      &kp U      &kp Y     &kp EXCL   &kp RC(RSHFT)
 &pht LSHFT ESC &kp A     &kp R       &kp S      &kp T             &kp G             &kp EQUAL          &none      &kp LGUI                                           &kp LGUI   &none       &kp MINUS     &kp M      &kp N      &kp E      &kp I      &kp O      &kp RSHFT
 &kp LCTRL      &kp Z     &kp X       &kp C      &kp D             &kp V                                &none      &none      &kp LALT  &none &none      &kp RALT     &none      &none                     &kp K      &kp H      &kp COMMA  &kp DOT   &kp FSLH    &kp RCTRL
 &kp DOWN       &kp GRAVE &kp SQT     &kp LEFT   &kp LALT                                       &kp BSPC   &mo 1      &kp LCTRL                  &kp RCTRL    &kp RET    &kp SPACE                            &kp RALT   &kp RIGHT  &kp LBKT  &kp RBKT    &kp UP
            >;
        };

        layer_keypad {
            bindings = <
  &kp SLCK &kp F1      &kp F2    &kp F3    &kp F4     &kp F5                 &kp F6                                                                                                         &kp F7   &kp F8          &kp F9      &kp F10    &kp F11   &kp F12     &kp DEL
  &trans   &kp TAB     &kp PSCRN &kp CAPS  &trans     &kp BSLH               &kp LC(LALT)                                                                                               &kp RC(LALT) &&kp LA(SPACE)  &kp N7      &kp N8     &kp N9    &trans      &trans
  &trans   &kp HOME    &kp PG_UP &kp PG_DN &kp END    &kp F12                &trans            &trans     &trans                                                    &trans    &trans       &trans   &kp DOT          &kp N4      &kp N5     &kp N6    &kp SEMI    &trans
  &trans   &pause_vid  &kp SPACE &kp RET &kp LC(LGUI) &trans                         &none      &none     &trans     &none &none            &trans                 &none      &none                 &kp COMMA        &kp N1      &kp N2     &kp N3    &kp N0      &trans
  &trans   &trans      &trans    &trans    &trans                               &mo 3       &trans     &trans                            &trans                 &trans     &trans                                    &trans      &trans     &kp LPAR  &kp RPAR    &trans
            >;
        };

        layer_fn {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                                                                                           &trans  &trans  &trans   &trans  &trans   &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                                                                                           &trans  &trans  &trans   &trans  &trans   &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans           &trans  &trans                                          &trans     &trans       &trans  &trans  &trans   &trans  &trans   &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                    &none   &none  &trans         &none   &none           &trans     &none       &none               &trans  &trans   &trans  &trans   &trans  &trans
 &trans  &trans  &trans  &trans  &trans                                            &trans  &trans  &trans                                &trans     &trans      &trans                      &trans   &trans  &trans   &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &out OUT_BLE    &bl BL_TOG         &none            &none            &rgb_ug RGB_TOG                                                                                                                  &none                          &none   &none       &none  &bl BL_TOG   &none  &none
  &none  &bt BT_SEL 1  &out OUT_USB         &none         &none            &none            &bootloader                                                                                                                      &bootloader                    &none   &none       &none       &none   &none  &none
  &none  &bt BT_SEL 2         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5                    &bt BT_CLR  &none                              &none       &none                      &rgb_ug RGB_MEFS_CMD 5          &none   &none       &none       &none   &none   &none
  &none  &bt BT_SEL 3    &bt BT_CLR         &none         &none            &none                                      &none           &none       &none  &none  &none    &none       &none       &none                                                      &none   &none       &none       &none   &none   &none
  &none  &bt BT_SEL 4         &none    &bl BL_INC    &bl BL_DEC                                                       &none           &none       &none                  &none       &none &rgb_ug RGB_TOG                                                          &bl BL_INC  &bl BL_DEC  &none   &none   &none
            >;
        };

    };
};
