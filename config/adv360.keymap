
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/outputs.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    lbhm: left_balanced_homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;    // <---[[moderate duration]]
        quick-tap-ms = <0>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = < 15 16 17 18 19 20 21 37 38 39 40 41 42 43 59 60 61 62 63 64 65 82 83 84 85 86 87 105 106 107 108 109 56 57 78 100 101 102 >;
    };

  //   rbhm: right_balanced_homerow_mods {
  //     compatible = "zmk,behavior-hold-tap";
  //     label = "HOMEROW_MODS";
  //     #binding-cells = <2>;
  //     tapping-term-ms = <200>;    // <---[[moderate duration]]
  //     quick-tap-ms = <0>;
  //     flavor = "balanced";
  //     bindings = <&kp>, <&kp>;
  //     hold-trigger-key-positions = < 0  1  2  3  4  5  6 22 23 24 25 26 27 28 44 45 46 47 48 49 50 66 67 68 69 70 71 88 89 90 91 92 52 53 75 95 96 97 >;
  // };

    pht: positional_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "POSITIONAL_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "hold-preferred";
        tapping-term-ms = <180>;
        bindings = <&kp>, <&kp>;
    }; /* quick-tap-ms = <100>; */
    mo_td: tap_dance_mod_tap {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_MOD_TAP";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&mo 1>, <&mo 2>;
    };
  };

  macros {
    pause_vid: pause_vid {
        label = "pause_vid";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <150>;
        bindings
            = <&macro_tap_time 10>
            , <&kp LA(TAB)>
            , <&kp SPACE>
            , <&macro_tap_time 10>
            , <&kp LA(TAB)>
            ;
    };
    prependx: prependx {
        label = "prependx";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
            = <&kp HOME>
            , <&kp X>
            , <&kp END>
            ;
    };
    tuskequal: tuskequal {
        label = "tuskequal";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
            = <&kp COLON>
            , <&kp EQUAL>
            ;
    };
    leftarrow: leftarrow {
        label = "leftarrow";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
            = <&kp LT>
            , <&kp MINUS>
            ;
    };
    rightarrow: rightarrow {
        label = "rightarrow";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
            = <&kp MINUS>
            , <&kp GT>
            ;
    };
  };

  keymap {
        compatible = "zmk,keymap";

// -----------------------------------------------------------------------           ---------------------------------------------------------------------
// |   TAB    |         |         |         |         |         |  None  |           | None |         |         |         |         |          |          |
// |LC(LSHFT) |    Q    |    W    |    F    |    P    |    B    |  None  |           | None |    Y    |    U    |    I    |    O    |    P     |  :/\     |
// |LSHFT/ESC |    A    |    R    |    S    |    T    |    G    |  None  |           | None |    H    |    J    |    K    |    L    |    ;     |  '/"     |
// |  LCTRL   |    Z    |    X    |    C    |    D    |    V    |---------           -------|    N    |    M    |    ,    |    .    |    /     |  RSHIFT  |
// |  DOWN    |    `    |    '    |  LEFT   |   LALT  |----------                           ----------|   RALT  |  RIGHT  |    [    |    ]     |   UP     |
// ----------------------------------------------------                                                ----------------------------------------------------
//
//                                                                        Thumb Cluster
//                                                       -----------------           ------------------
//                                                       |       | LGUI  |           | LGUI  |        |
//                                               -------------------------           ---------------------------
//                                               |       |       | LALT  |           | RALT  |        |        |
//                                               | BKSP  | LAYER |--------           --------| LAYER  |  BSPC  |
//                                               |       | SWITCH| LCTRL |           | RCTRL | SWITCH |        |
//                                               -------------------------           ---------------------------

        default_layer {
            bindings = <
 &kp TAB       &kp LA(SPACE)  &kp LC(PG_UP) &kp LA(TAB) &kp LC(PG_DN)     &kp LA(LSHFT)      &none                                                                   &none         &none   &kp LC(LG(LEFT)) &kp LC(TAB) &kp LC(LG(RIGHT))  &kp LG(TAB)  &kp LC(LGUI)
 &kp LC(LSHFT) &kp Q          &kp W         &kp F      &kp P             &kp B              &kp F12                                                                  &kp F11       &kp J      &kp L      &kp U          &kp Y              &kp EXCL     &kp RC(RSHFT)
 &pht LSHFT ESC &lbhm LCTRL A  &lbhm LSHFT R  &kp S      &kp T             &kp G             &kp LEFT                                                                 &kp RIGHT     &kp M      &kp N      &kp E         &kp       I    &kp           O  &kp RSHFT
 &kp LCTRL      &kp Z         &kp X         &kp C      &kp D             &kp V                                                                                                     &kp K      &kp H      &kp COMMA      &kp DOT            &kp FSLH     &kp RCTRL
 &kp DOWN       &kp GRAVE     &kp SQT       &kp LEFT   &kp LALT                                                                                                                               &kp RALT   &kp RIGHT      &kp LBKT           &kp RBKT     &kp UP

                                                                                                     &kp UP   &kp LGUI      &kp LGUI   &kp DOWN
                                                                                                             &kp LALT      &kp RALT
                                                                                           &kp BSPC  &mo_td  &kp LCTRL     &kp RCTRL  &mo_td   &kp SPACE
            >;
        };

        layer_keypad {
            bindings = <
 &kp PSCRN &kp F1      &kp F2    &kp F3    &kp F4     &kp F5                 &kp F6                                                                             &kp F7   &kp F8          &kp F9      &kp F10    &kp F11   &kp F12     &kp DEL
  &trans   &kp TAB   &pause_vid &kp COLON &leftarrow  &kp BSLH               &kp LC(LALT)                                                                   &kp RC(LALT)  &kp LA(SPACE)   &tuskequal   &rightarrow  &trans    &trans      &trans
  &trans   &kp HOME    &kp PG_UP &kp PG_DN &kp F12    &kp END                &kp RET                                                                             &trans  &kp MINUS     &kp EQUAL    &kp COMMA  &kp DOT   &kp SEMI    &trans
  &trans   &kp N1     &kp N2     &kp N3    &kp N4     &kp N5                                                                                                     &kp N6          &kp N7      &kp N8     &kp N9    &kp N0      &trans
  &trans   &kp BSPC   &kp CAPS    &trans    &trans                                                                                                                                 &trans      &trans     &kp LPAR  &kp RPAR    &trans

                                                                                                  &trans    &trans               &trans   &trans
                                                                                                            &trans               &trans
                                                                                       &kp DEL    &trans     &mo 3               &trans   &kp RET   &trans


            >;
        };

        layer_fn {
            bindings = <
 &trans  &trans   &trans  &trans  &trans  &trans                            &trans                                                                   &trans  &trans     &trans   &trans    &trans     &trans    &trans
 &trans  &trans   &trans  &trans  &trans  &kp PIPE                          &trans                                                                   &trans  &trans     &trans   &trans   &trans      &trans    &trans
 &trans  &trans   &trans  &trans  &kp F12 &trans                            &trans                                                                   &trans  &kp UNDER  &kp PLUS &kp LT   &kp GT      &kp COLON &trans
 &trans  &kp EXCL &kp AT  &kp POUND  &kp DLLR &kp PRCNT                                                                                                      &kp CARET  &kp AMPS &kp STAR  &kp LPAR   &kp RPAR  &trans
 &trans  &trans   &trans  &trans  &trans                                                                                                                                &trans   &trans    &trans     &trans    &trans

                                                                                       &trans  &trans                 &trans     &trans
                                                                                               &trans                 &trans
                                                                               &trans  &trans  &trans                 &trans     &trans      &trans

            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &out OUT_BLE    &bl BL_TOG         &none            &none            &rgb_ug RGB_TOG                                                                               &none                          &none   &none       &none  &bl BL_TOG   &none  &none
  &none  &bt BT_SEL 1  &out OUT_USB         &none         &none            &none            &bootloader                                                                                   &bootloader                    &none   &none       &none       &none   &none  &none
  &none  &bt BT_SEL 2         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5                                                                       &rgb_ug RGB_MEFS_CMD 5          &none   &none       &none       &none   &none   &none
  &none  &bt BT_SEL 3    &bt BT_CLR         &none         &none            &none                                                                                                                                         &none   &none       &none       &none   &none   &none
  &none  &bt BT_SEL 4         &none    &bl BL_INC    &bl BL_DEC                                                                                                                                                                  &bl BL_INC  &bl BL_DEC  &none   &none   &none

                                                                                                                              &bt BT_CLR  &none                  &none       &none
                                                                                                                                          &none                  &none
                                                                                                              &none           &none       &none                  &none       &none &rgb_ug RGB_TOG

            >;
        };

    };
};

